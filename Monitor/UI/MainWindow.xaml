<!-- Copyright (c) 2023 Denys Dragunov, dragunovdenis@gmail.com
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files(the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and /or sell
copies of the Software, and to permit persons to whom the Software is furnished
to do so, subject to the following conditions :

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.-->

<Window x:Class="Monitor.UI.MainWindow"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            mc:Ignorable="d"
            Title="TrainingCell" Height="600" Width="800" MinHeight="475" Icon="/TrainingCell.ico" Name="Ui">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height= "Auto" />
            <RowDefinition Height= "*" />
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Right" Background="Transparent">
            <MenuItem Header="?" Background="Transparent" Click="MenuAbout_OnClick"/>
        </Menu>
        <TabControl Grid.Row="1" Name="MainTabControl" DataContext="{Binding ElementName = Ui}">
            <TabItem>
                <TabItem.Header>
                    Play
                </TabItem.Header>
                <Grid Background="LightGray">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width= "*" />
                    <ColumnDefinition Width= "100" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Background="LightGray">
                            <Button Click="LoadWhiteAgentButton_OnClick" Name="LoadWhiteAgentButton" IsEnabled="{Binding Engine.IsPlaying,
                            Converter={StaticResource InvertBoolConverter}}">Load White Agent</Button>
                            <Button Click="LoadBlackAgentButton_OnClick" Name="LoadBlackAgentButton" IsEnabled="{Binding Engine.IsPlaying,
                            Converter={StaticResource InvertBoolConverter}}">Load Black Agent</Button>
                            <Button Click="CancelButton_OnClick"  Name="CancelButton" IsEnabled="{Binding Engine.CanCancelPlaying}">Cancel</Button>
                            <Button Click="EditAgentButton_OnClick"  Name="EditAgentButton" IsEnabled="{Binding Engine.CanEditAgent}">Edit Agent</Button>
                            <GroupBox Header="Edit Initial State" Visibility="{Binding Engine.IsPlaying,
                                Converter={StaticResource InvertBoolToVisibilityConverter}}" HorizontalAlignment="Stretch">
                                <StackPanel HorizontalAlignment="Stretch">
                                    <RadioButton Content="Chess" IsChecked="{Binding ChessStateEditing}" />
                                    <RadioButton Content="Checkers" IsChecked="{Binding ChessStateEditing,
                                        Converter={StaticResource InvertBoolConverter}}"/>
                                    <Button Name="ResetEditedStateBtn" Click="ResetEditedStateBtn_OnClick">Reset</Button>
                                    <Button Name="ClearEditedStateBtn" Click="ClearEditedStateBtn_OnClick">Clear</Button>
                                </StackPanel>
                            </GroupBox>
                            <CheckBox Name="InspectMovesCheckbox" IsChecked="{Binding Engine.InspectOptions}" Margin="3">Evaluate</CheckBox>
                        </StackPanel>
                        <GroupBox Grid.Row="1" Header="Move Evaluation" Visibility="{Binding Engine.InspectOptions,
                            Converter = {StaticResource BoolToVisibilityConverter}}" VerticalAlignment="Top">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Button Grid.Row="0" Click="EvaluationContinueButton_OnClick" 
                                        IsEnabled="{Binding Engine.InspectionOngoing}" Margin="3">Continue</Button>
                                <DataGrid Grid.Row="1" Name="OptionValueGrid" SelectedItem="{Binding Engine.SelectedOption}"
                                          ItemsSource="{Binding Engine.EvaluatedOptions}" AutoGenerateColumns="False"
                                          SelectionMode="Single" SelectionUnit="FullRow"
                                          Visibility="{Binding Engine.InspectOptions,
                                         Converter={StaticResource BoolToVisibilityConverter}}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Value" Binding="{Binding Value, Mode=OneWay, StringFormat=N5}" Width="*" />
                                </DataGrid.Columns>
                            </DataGrid>
                            </Grid>
                        </GroupBox>
                        <Grid Grid.Row="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBox Grid.Row="0" Name = "InfoTextBox" IsReadOnly="True" BorderThickness="0" Visibility="{Binding Engine.IsPlaying,
                            Converter={StaticResource BoolToVisibilityConverter}}" Background="LightGray"/>
                            <DockPanel Grid.Row="1">
                            <TextBox IsReadOnly="True" Background="LightGray" BorderThickness="0" Text="Timer:"/>
                            <TextBox IsReadOnly="True" Background="LightGray" BorderThickness="0" Text="{Binding Engine.PreviousMoveTime}"/>
                        </DockPanel>
                        </Grid>
                        <ProgressBar Grid.Row="3" Name="ProcessingBar" IsIndeterminate= "{Binding Engine.TdlAgentIsPlaying}"  Height="15"/>
                    </Grid>
                    <DockPanel Grid.Column="0" Name="MainPanel" >
                        <Canvas Name="MainCanvas" Background="White"></Canvas>
                </DockPanel>
            </Grid>
            </TabItem>
            <TabItem PreviewMouseDown="AddTab_OnPreviewMouseDown" ToolTip="Add new train session" 
                     IsEnabled="{Binding CanAddNewTraining}">
                <TabItem.Header>+</TabItem.Header>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
